--- a/src/amd/vulkan/meson.build
+++ b/src/amd/vulkan/meson.build
@@ -66,7 +66,6 @@
   'radv_meta_resolve_cs.c',
   'radv_meta_resolve_fs.c',
   'radv_nir_lower_ycbcr_textures.c',
-  'radv_nir_to_llvm.c',
   'radv_pass.c',
   'radv_pipeline.c',
   'radv_pipeline_cache.c',
@@ -156,13 +155,14 @@
   'vulkan_radeon',
   [libradv_files, radv_entrypoints, sha1_h],
   include_directories : [
-    inc_include, inc_src, inc_mapi, inc_mesa, inc_gallium, inc_gallium_aux, inc_amd, inc_amd_common, inc_amd_common_llvm, inc_compiler, inc_util, inc_vulkan_wsi,
+    inc_include, inc_src, inc_mapi, inc_mesa, inc_gallium, inc_gallium_aux, inc_amd, inc_amd_common, inc_compiler, inc_util, inc_vulkan_wsi,
   ],
   link_with : [
-    libamd_common, libamd_common_llvm, libamdgpu_addrlib, libvulkan_wsi,
+    #libamd_common, libamd_common_llvm, libamdgpu_addrlib, libvulkan_wsi,
+    libamd_common, libamdgpu_addrlib, libvulkan_wsi,
   ],
   dependencies : [
-    dep_llvm, dep_libdrm_amdgpu, dep_thread, dep_elf, dep_dl, dep_m,
+    dep_libdrm_amdgpu, dep_thread, dep_elf, dep_dl, dep_m,
     dep_valgrind, radv_deps, idep_aco,
     idep_mesautil, idep_nir, idep_vulkan_util, idep_amdgfxregs_h, idep_xmlconfig,
   ],
diff -u amd/vulkan/radv_shader.c src/mesa/src/amd/vulkan/radv_shader.c
--- a/src/amd/vulkan/radv_shader.c
+++ b/src/amd/vulkan/radv_shader.c
@@ -40,7 +40,7 @@
 #include "util/debug.h"
 #include "ac_binary.h"
 #include "ac_exp_param.h"
-#include "ac_llvm_util.h"
+
 #include "ac_nir.h"
 #include "ac_rtld.h"
 #include "aco_interface.h"
@@ -571,7 +571,7 @@
    if (nir->info.stage == MESA_SHADER_GEOMETRY) {
       unsigned nir_gs_flags = nir_lower_gs_intrinsics_per_stream;
 
-      if (device->physical_device->use_ngg && !radv_use_llvm_for_stage(device, stage)) {
+      if (device->physical_device->use_ngg) {
          /* ACO needs NIR to do some of the hard lifting */
          nir_gs_flags |= nir_lower_gs_intrinsics_count_primitives |
                          nir_lower_gs_intrinsics_count_vertices_per_primitive |
@@ -613,7 +613,7 @@
                                .lower_quad_broadcast_dynamic = 1,
                                .lower_quad_broadcast_dynamic_to_const = gfx7minus,
                                .lower_shuffle_to_swizzle_amd = 1,
-                               .lower_elect = radv_use_llvm_for_stage(device, stage),
+                               .lower_elect = 0,
                             });
 
    nir_lower_load_const_to_scalar(nir);
@@ -753,8 +753,7 @@
    }
 
    /* The RADV/LLVM backend expects 64-bit IO to be lowered. */
-   nir_lower_io_options options =
-      radv_use_llvm_for_stage(device, nir->info.stage) ? nir_lower_io_lower_64bit_to_32 : 0;
+   nir_lower_io_options options = 0;
 
    NIR_PASS_V(nir, nir_lower_io, nir_var_shader_in | nir_var_shader_out, type_size_vec4, options);
 
@@ -1388,11 +1387,8 @@
       shader_count >= 2,
       shader_count >= 2 ? shaders[shader_count - 2]->info.stage : MESA_SHADER_VERTEX);
 
-   if (radv_use_llvm_for_stage(device, stage) || options->dump_shader || options->record_ir)
-      ac_init_llvm_once();
-
-   if (radv_use_llvm_for_stage(device, stage)) {
-      llvm_compile_shader(device, shader_count, shaders, &binary, &args);
+   if (0) {
+      //llvm_compile_shader(device, shader_count, shaders, &binary, &args);
    } else {
       aco_compile_shader(shader_count, shaders, &binary, &args);
    }
@@ -1453,7 +1449,7 @@
    if (key)
       options.key = *key;
 
-   options.explicit_scratch_args = !radv_use_llvm_for_stage(device, stage);
+   options.explicit_scratch_args = 1;
    options.robust_buffer_access = device->robust_buffer_access;
    options.robust_buffer_access2 = device->robust_buffer_access2;
    options.disable_optimizations = disable_optimizations;
@@ -1472,7 +1468,7 @@
    struct radv_nir_compiler_options options = {0};
    gl_shader_stage stage = MESA_SHADER_VERTEX;
 
-   options.explicit_scratch_args = !radv_use_llvm_for_stage(device, stage);
+   options.explicit_scratch_args = 1;
    options.key.has_multiview_view_index = multiview;
    options.disable_optimizations = disable_optimizations;
 

