From e45c17c9471352dde06208a43abe72d99e68033d Mon Sep 17 00:00:00 2001
From: Zebediah Figura <z.figura12@gmail.com>
Date: Sun, 29 Jul 2018 16:53:58 -0500
Subject: [PATCH 77/83] ntdll, server: Specify EFD_SEMAPHORE on the server
 side.

This just makes things cleaner; since we already pass the type to the server
there's no reason to pass this as well.

Signed-off-by: Zebediah Figura <z.figura12@gmail.com>
---
 include/wine/server_protocol.h |  4 +---
 server/protocol.def            |  1 -
 server/request.h               |  5 ++---
 server/trace.c                 |  1 -
 6 files changed, 18 insertions(+), 25 deletions(-)

diff --git a/include/wine/server_protocol.h b/include/wine/server_protocol.h
index 25e2b897df..dff6c7c960 100644
--- a/include/wine/server_protocol.h
+++ b/include/wine/server_protocol.h
@@ -5662,10 +5662,8 @@ struct create_esync_request
     struct request_header __header;
     unsigned int access;
     int          initval;
-    int          flags;
     int          type;
     /* VARARG(objattr,object_attributes); */
-    char __pad_28[4];
 };
 struct create_esync_reply
 {
diff --git a/server/protocol.def b/server/protocol.def
index c13c945de7..6be50e0186 100644
--- a/server/protocol.def
+++ b/server/protocol.def
@@ -3860,7 +3860,6 @@ struct handle_info
 @REQ(create_esync)
     unsigned int access;        /* wanted access rights */
     int          initval;       /* initial value */
-    int          flags;         /* flags (EFD_SEMAPHORE or 0) */
     int          type;          /* type of esync object (see below) */
     VARARG(objattr,object_attributes); /* object attributes */
 @REPLY
diff --git a/server/request.h b/server/request.h
index b3c31367d2..13b5b5f380 100644
--- a/server/request.h
+++ b/server/request.h
@@ -2416,9 +2416,8 @@ C_ASSERT( FIELD_OFFSET(struct terminate_job_request, status) == 16 );
 C_ASSERT( sizeof(struct terminate_job_request) == 24 );
 C_ASSERT( FIELD_OFFSET(struct create_esync_request, access) == 12 );
 C_ASSERT( FIELD_OFFSET(struct create_esync_request, initval) == 16 );
-C_ASSERT( FIELD_OFFSET(struct create_esync_request, flags) == 20 );
-C_ASSERT( FIELD_OFFSET(struct create_esync_request, type) == 24 );
-C_ASSERT( sizeof(struct create_esync_request) == 32 );
+C_ASSERT( FIELD_OFFSET(struct create_esync_request, type) == 20 );
+C_ASSERT( sizeof(struct create_esync_request) == 24 );
 C_ASSERT( FIELD_OFFSET(struct create_esync_reply, handle) == 8 );
 C_ASSERT( FIELD_OFFSET(struct create_esync_reply, type) == 12 );
 C_ASSERT( FIELD_OFFSET(struct create_esync_reply, shm_idx) == 16 );
diff --git a/server/trace.c b/server/trace.c
index 89c4743d3d..f8acbb93d6 100644
--- a/server/trace.c
+++ b/server/trace.c
@@ -4545,7 +4545,6 @@ static void dump_create_esync_request( const struct create_esync_request *req )
 {
     fprintf( stderr, " access=%08x", req->access );
     fprintf( stderr, ", initval=%d", req->initval );
-    fprintf( stderr, ", flags=%d", req->flags );
     fprintf( stderr, ", type=%d", req->type );
     dump_varargs_object_attributes( ", objattr=", cur_size );
 }
-- 
2.19.1

